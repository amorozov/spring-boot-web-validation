/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.example.api;

import io.swagger.annotations.*;
import org.example.model.TestRequestBody;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.UUID;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-12-05T23:27:42.477443+07:00[Asia/Novosibirsk]")
@Validated
@Api(value = "test", description = "the test API")
public interface TestApi {

    /**
     * POST /test : a sample POST request with a mandatory Request Body
     *
     * @param testRequestBody sample POST request body (required)
     * @return OK (status code 204)
     */
    @ApiOperation(
            value = "a sample POST request with a mandatory Request Body",
            nickname = "testBodyVerification", notes = "", tags = {}
    )
    @ApiResponses(value = {
            @ApiResponse(code = 204, message = "OK")
    })
    @RequestMapping(
            method = RequestMethod.POST,
            value = "/test",
            consumes = {"application/json"}
    )
    ResponseEntity<Void> testBodyVerification(
            @ApiParam(value = "sample POST request body", required = true)
            @Valid @RequestBody
                    TestRequestBody testRequestBody
    );


    /**
     * GET /test : a sample GET request with input passed as parameters
     *
     * @param id          Object ID as query parameter (required)
     * @param name        (required)
     * @param age         (required)
     * @param description (optional)
     * @return OK (status code 204)
     */
    @ApiOperation(
            value = "a sample GET request with input passed as parameters",
            nickname = "testParametersVerification", notes = "", tags = {}
    )
    @ApiResponses(value = {
            @ApiResponse(code = 204, message = "OK")})
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/test"
    )
    ResponseEntity<Void> testParametersVerification(
            @NotNull @ApiParam(value = "Object ID as query parameter", required = true)
            @Valid @RequestParam(value = "id", required = true)
                    UUID id,
            @NotNull @Size(min = 10) @ApiParam(value = "", required = true)
            @Valid @RequestParam(value = "name", required = true)
                    String name,
            @NotNull @Min(1) @Max(99) @ApiParam(value = "", required = true)
            @Valid @RequestParam(value = "age", required = true)
                    Integer age,
            @Size(min = 20) @ApiParam(value = "")
            @Valid @RequestParam(value = "description", required = false)
                    String description
    );

}
